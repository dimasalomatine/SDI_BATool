/*
 * EditNNMap.java
 *
 * Created on January 6, 2007, 1:52 PM
 */

package NN2HLBP;

import Utils.TDoc;
import java.awt.Component;
import java.util.List;
import javax.swing.AbstractCellEditor;
import javax.swing.JComponent;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author  Dmitry
 */
public class EditNNMap extends javax.swing.JFrame {
    
    /** Creates new form EditNNMap */
    public EditNNMap() {
        initComponents();
        setVisible(true);
        int vColIndex = 0;
        DefaultTableModel model = (DefaultTableModel) nntable.getModel();
        vColIndex=model.getColumnCount();
        TableColumn col;
        
        for(int i=0;i<vColIndex;i++)
        {
        col = nntable.getColumnModel().getColumn(i);
        MyTableCellEditor mtse=new MyTableCellEditor();
        col.setCellEditor(mtse);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        nntable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        nntable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "open", "close", "high", "low", "volume", "close(%)", "volume (%)", "close/open", "close/high", "close/low", "External EVT", "Internal EVT"
            }
        ));
        nntable.setCellSelectionEnabled(true);
        nntable.setMaximumSize(new java.awt.Dimension(800, 10000));
        nntable.setPreferredSize(new java.awt.Dimension(800, 30000));
        jScrollPane1.setViewportView(nntable);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 495, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private class MyTableCellEditor extends AbstractCellEditor implements TableCellEditor {
        // This is the component that will handle the editing of the cell value
        JComponent component = new JTextField();

        
        // This method is called when a cell value is edited by the user.
        public Component getTableCellEditorComponent(JTable table, Object value,
                boolean isSelected, int rowIndex, int vColIndex) {
            // 'value' is value contained in the cell located at (rowIndex, vColIndex)
    
            //if (isSelected) 
            //{
                // cell (and perhaps other cells) are selected
      
           // }
    
            // Configure the component with the specified value
            if(value instanceof Float)
            ((JTextField)component).setText(((Float) value).toString());
            else
                ((JTextField)component).setText((String) value);
             ((TDoc) refworkOnData.get(rowIndex)).o[vColIndex]=value;
            // Return the configured component
            return component;
        }
    
        // This method is called when editing is completed.
        // It must return the new value to be stored in the cell.
        public Object getCellEditorValue() {
            
            return ((JTextField)component).getText();
        }
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditNNMap().setVisible(true);
            }
        });
    }
    java.util.List refworkOnData;
    void setworkdata(java.util.List workOnData) {
        refworkOnData=workOnData;
        DefaultTableModel model = (DefaultTableModel) nntable.getModel();
        int i,rc=model.getRowCount();
        for(i=rc-1;i>=0;i--)model.removeRow(i);
        if(refworkOnData==null)return;
        for(i=0;i<workOnData.size();i++)model.addRow(((TDoc) workOnData.get(i)).o);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable nntable;
    // End of variables declaration//GEN-END:variables
    
}
