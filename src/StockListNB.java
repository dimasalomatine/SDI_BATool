import java.awt.Component;
import javax.swing.ImageIcon;

/**
 *
 * @author  Dmitry
 */
public class StockListNB extends javax.swing.JPanel
{
    /**
     * Creates new form StockListNB
     */
    public StockListNB ()
    {
        sltp=new StoklistTablePanel();
        initComponents ();
        initTableControlPanel();

         org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(63, 63, 63)
                .add(graph)
                .add(5, 5, 5)
                .add(checkall)
                .add(5, 5, 5)
                .add(data)
                .add(5, 5, 5)
                .add(uncheckall)
                .add(5, 5, 5)
                .add(pintofollow)
                .add(5, 5, 5)
                .add(companyinfo)
                .add(5, 5, 5)
                .add(anualreports) .add(jButton1))
            .add(layout.createSequentialGroup()
                .add(229, 229, 229)
                .add(tcp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(filterFindPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
		.add(sltp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(graph)
                    .add(checkall)
                    .add(data)
                    .add(uncheckall)
                    .add(pintofollow)
                    .add(companyinfo)
                    .add(anualreports) .add(jButton1))


                .add(tcp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(5, 5, 5)
                .add(filterFindPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
			.add(5, 5, 5)
                .add(sltp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(453, 453, 453))
        );

        filterFindPanel1.setparent(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        graph = new javax.swing.JButton();
        checkall = new javax.swing.JButton();
        data = new javax.swing.JButton();
        uncheckall = new javax.swing.JButton();
        pintofollow = new javax.swing.JButton();
        companyinfo = new javax.swing.JButton();
        anualreports = new javax.swing.JButton();
        tcp = new TableControlPanelNB();
        filterFindPanel1 = new FilterFindPanel();
        jButton1 = new javax.swing.JButton();

        String timgdir=BursaAnalizer_Frame.getImgDir();
        graph.setText("Graph");
        graph.setIcon (new ImageIcon(timgdir+"exchange.png"));
        graph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graphActionPerformed(evt);
            }
        });

        checkall.setText("Check All");
        checkall.setIcon (new ImageIcon( timgdir+"selection.png"));
        checkall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkallActionPerformed(evt);
            }
        });

        data.setText("Data");
        data.setIcon (new ImageIcon(timgdir+"data_table.png"));
        data.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataActionPerformed(evt);
            }
        });

        uncheckall.setText("Uncheck All");
        uncheckall.setIcon (new ImageIcon( timgdir+"unselection.png"));
        uncheckall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uncheckallActionPerformed(evt);
            }
        });

        pintofollow.setText("Pin to Follow");
        pintofollow.setIcon (new ImageIcon( timgdir+"index_add.png"));
        pintofollow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pintofollowActionPerformed(evt);
            }
        });

        companyinfo.setText("Company Info");
        companyinfo.setIcon (new ImageIcon(timgdir+"data_view.png"));
        companyinfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                companyinfoActionPerformed(evt);
            }
        });

        anualreports.setText("Anual Reports");
        anualreports.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anualreportsActionPerformed(evt);
            }
        });

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(filterFindPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(63, 63, 63)
                        .add(graph)
                        .add(5, 5, 5)
                        .add(checkall)
                        .add(5, 5, 5)
                        .add(data)
                        .add(5, 5, 5)
                        .add(uncheckall)
                        .add(5, 5, 5)
                        .add(pintofollow)
                        .add(5, 5, 5)
                        .add(companyinfo))
                    .add(layout.createSequentialGroup()
                        .add(229, 229, 229)
                        .add(tcp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButton1)
                    .add(anualreports))
                .add(33, 33, 33))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(5, 5, 5)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(graph)
                    .add(checkall)
                    .add(data)
                    .add(uncheckall)
                    .add(pintofollow)
                    .add(companyinfo)
                    .add(anualreports))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(5, 5, 5)
                        .add(tcp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButton1)))
                .add(5, 5, 5)
                .add(filterFindPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(453, 453, 453))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pintofollowActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_pintofollowActionPerformed
    {//GEN-HEADEREND:event_pintofollowActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_pintofollowActionPerformed

    private void uncheckallActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_uncheckallActionPerformed
    {//GEN-HEADEREND:event_uncheckallActionPerformed
        sltp.slt.checkuncheck(0,sltp.slt.atd.size(),false,false);	
		   sltp.slt.getTable().revalidate();
    }//GEN-LAST:event_uncheckallActionPerformed

    private void checkallActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_checkallActionPerformed
    {//GEN-HEADEREND:event_checkallActionPerformed
        sltp.slt.checkuncheck(0,sltp.slt.atd.size(),false,true);	
        sltp.slt.getTable().revalidate();
    }//GEN-LAST:event_checkallActionPerformed

    private void anualreportsActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_anualreportsActionPerformed
    {//GEN-HEADEREND:event_anualreportsActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_anualreportsActionPerformed

    private void companyinfoActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_companyinfoActionPerformed
    {//GEN-HEADEREND:event_companyinfoActionPerformed
       int sr=sltp.slt.getTable().getSelectedRow();
	int menayaid;
        if(sr>-1)
         	{
         	String companytext=sltp.slt.getTableModel().getValueAt(sr,1).toString();
         	if(companytext.equals(""))companytext="Unk";
          	int companyid=Integer.parseInt(sltp.slt.cbcomp.getVc2byVc1(companytext));
          	BursaAnalizer_Frame.getCompanyInstance().initOnData(companyid);
			BursaAnalizer_Frame.switchToTab("Company");
         	}else sltp.slt.selectionmessageerr(null);
    }//GEN-LAST:event_companyinfoActionPerformed

    private void dataActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_dataActionPerformed
    {//GEN-HEADEREND:event_dataActionPerformed
        int sr=sltp.slt.getTable().getSelectedRow();
	int menayaid;
        if(sr>-1)
         	{
          	menayaid=Integer.parseInt(sltp.slt.getTableModel ().getValueAt(sr,0).toString());
          	BursaAnalizer_Frame.getTradeDataListInstance().initOnData(menayaid);
                
			BursaAnalizer_Frame.switchToTab("Data");
         	}else sltp.slt.selectionmessageerr(null);
    }//GEN-LAST:event_dataActionPerformed

    private void graphActionPerformed (java.awt.event.ActionEvent evt)//GEN-FIRST:event_graphActionPerformed
    {//GEN-HEADEREND:event_graphActionPerformed
        int sr=sltp.slt.getTable().getSelectedRow();
	int menayaid;
        if(sr>-1)
         	{
          	menayaid=Integer.parseInt(sltp.slt.getTableModel ().getValueAt(sr,0).toString());
          	TradeDataListNB tdli=BursaAnalizer_Frame.getTradeDataListInstance();
          	tdli.initOnData(menayaid);
          	BursaAnalizer_Frame.getStockGraphInstance().setDataPoints(sltp.slt.getTableModel ().getValueAt(sr,2).toString(),tdli.getTradeDataList());
			BursaAnalizer_Frame.switchToTab("Graph");
         	}else sltp.slt.selectionmessageerr(null);
    }//GEN-LAST:event_graphActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        sltp.slt.fetchdata(null);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    @SuppressWarnings("empty-statement")
    public void initTableControlPanel()
	{
                boolean flag = false;
		boolean privilegies[]=BursaAnalizer_Frame.getCurentUserPrivilegies();
		if(privilegies[BursaAnalizer_Frame.CAN_ADD_REC]==true||
			privilegies[BursaAnalizer_Frame.CAN_DEL_REC]==true||
			privilegies[BursaAnalizer_Frame.CAN_UPD_REC]==true)
		{
                    Component []tc=this.getComponents();
                    
                    for(int i=0;i<tc.length;i++)
                    {
                     String s=tc[i].getName();
                     if(s!=null && true==s.equalsIgnoreCase("TableControlPanelNB"))
                     {
                        tcp.initSTDButtons(sltp.slt,privilegies[BursaAnalizer_Frame.CAN_ADD_REC],
			privilegies[BursaAnalizer_Frame.CAN_DEL_REC],
			privilegies[BursaAnalizer_Frame.CAN_UPD_REC]);
                        flag=true;
                        break;
                     }
                     
                    }
		}
                tcp.setVisible (flag);
	}
    	/*
	private void makenewproject()
	{
	  	 boolean uniq=false;
         String nepn="";
         SDITRS RS=null;
         String sqlstr="";
         SDITdoc t=null;
	 	JOptionPane.showMessageDialog(this,
         	 						   "New Project ? :)",
         	 								"Just provide uniq name and LETSGO !!!!",
         	 								JOptionPane.INFORMATION_MESSAGE);
         if(JOptionPane.showConfirmDialog(this,
         	 							"<HTML><p><center>During this operation <br>Current project will be unloaded so make sure You have Saved it !!!!",
         	 							"Important !!!",
         	 							JOptionPane.YES_NO_OPTION)==JOptionPane.NO_OPTION)return;
         RS=new SDITRS(db.con);
         while(!uniq)//don't leave until not uniq name provided or cancel pressed
         {
         	if((nepn=JOptionPane.showInputDialog("Enter 'New Project' name"))==null)return;
	 				if(nepn.length()>0)
	 				 if(!RS.RowExist("SELECT * from PROJECT WHERE NAME='"+nepn+"'"))
	 				 uniq=true;				
         }
         JOptionPane.showMessageDialog(this,
         	 							"<HTML><center>Current project will be unloaded<br>and new will be set up as current !!!!",
         	 							"Important !!!",
         	 							JOptionPane.INFORMATION_MESSAGE);
         // if we got to here so make new row and insert into table and also in swing table
          try {
				RS.reuse();
				sqlstr = new String("insert into PROJECT(NAME,COMPLETED) values('"+nepn+"',false)");
				RS.ExecSQL(sqlstr);
				RS.reuse();
	 			RS.ExecSQL("SELECT * from PROJECT WHERE NAME='"+nepn+"'");
	 			if(RS.rs.next())//only one row must be returned
     			{
     		    t=new SDITdoc(4);
     		 	t.o[0]=new Integer(RS.rs.getInt("PROJECTID"));
     		 	t.o[1]=new String(RS.rs.getString("NAME"));
     		 	t.o[2]=new String(RS.rs.getDate("DATE").toString());
     		 	t.o[3]=new Boolean(RS.rs.getBoolean("COMPLETED"));
     		 	atd.add(t);
     		 	world.Clear();//if any loaded
     		 	parent.curentprojectid=((Integer)t.o[0]).intValue();
     			}
         	}catch (SQLException e) 
            	{
            	if(W3D_C.debug){System.out.println("Error23: " + e);}
        		}
        		finally
        	{
        			RS.close();
     		        RS=null;
     		        table.revalidate();
        	}	
	}
	private void deleteproject()
	{
		String sqlstr="";
		int sr=table.getSelectedRow();
         if(sr>-1)
         {
 		  mysimpleoption so=new mysimpleoption(this,
         					   "Delete project?",
         					   "<HTML><center>You are going to delete :<br><font color=red>the Project and the references </font><br><font color=green>but not the object data !!!");
         if(so.useraction==0)
         {
         	if(parent.curentprojectid==Integer.parseInt(datamodel.getValueAt(sr,-1).toString()))
         	{
         	 JOptionPane.showMessageDialog(this,
         	 								"'"+datamodel.getValueAt(sr,0).toString()+"' - This is curent scene :(",
         	 								"I going to unload it too !!!!",
         	 								JOptionPane.INFORMATION_MESSAGE);
         	 world.Clear();	
         	 parent.curentprojectid=-1;
         	}
         	//here delete project object then project
         	//here remove it from db and table model
              
     		  	int pid=Integer.parseInt(datamodel.getValueAt(sr,-1).toString());
     		  	sqlstr = new String("delete from Project_Object where ProjectID="+pid);
     		  	SDITRS RS=new SDITRS(db.con);
				RS.ExecSQL(sqlstr);
				sqlstr = new String("delete from Project where ProjectID="+pid);
				RS.reuse();
				RS.ExecSQL(sqlstr);
				RS.close();
				RS=null;
		
        		atd.remove(sr);
        		table.revalidate();
         	//
         }
         }
	}
	*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton anualreports;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton checkall;
    private javax.swing.JButton companyinfo;
    private javax.swing.JButton data;
    private FilterFindPanel filterFindPanel1;
    private javax.swing.JButton graph;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton pintofollow;
    private TableControlPanelNB tcp;
    private javax.swing.JButton uncheckall;
    // End of variables declaration//GEN-END:variables

    public StoklistTablePanel sltp;
    
}
