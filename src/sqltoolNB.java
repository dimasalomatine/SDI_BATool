/*
 * sqltoolNB.java
 *
 * Created on 26 ספטמבר 2008, 16:47
 */



import DBCONNECT.TRS;
import Utils.LoggerNB;
import java.sql.Connection;
import java.sql.SQLException;
import javax.script.ScriptEngine;
import javax.script.ScriptEngineManager;
import javax.script.ScriptException;

/**
 *
 * @author  Dmitry
 */
public class sqltoolNB extends javax.swing.JFrame {
    
    /** Creates new form BeanForm */
    public sqltoolNB() {
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        execgo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jCheckBox_sql_js = new javax.swing.JCheckBox();
        jComboBox_usedb = new javax.swing.JComboBox();
        jButtonClean = new javax.swing.JButton();

        setBounds(new java.awt.Rectangle(0, 0, 1024, 768));

        jPanel1.setMinimumSize(new java.awt.Dimension(400, 400));

        execgo.setText("run");
        execgo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                execgoActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("var ret=4; for (i=0;i<5;i++) { ret=ret+i; }");
        jScrollPane1.setViewportView(jTextArea1);

        jButton1.setText("close");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox_sql_js.setText("javascript/SQL");
        jCheckBox_sql_js.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox_sql_jsStateChanged(evt);
            }
        });

        jComboBox_usedb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Users", "System", "Data" }));
        jComboBox_usedb.setEnabled(false);

        jButtonClean.setText("Clean");
        jButtonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCleanActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(31, 31, 31)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 927, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(123, 123, 123)
                        .add(jComboBox_usedb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(50, 50, 50)
                        .add(jCheckBox_sql_js)
                        .add(261, 261, 261)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jButtonClean)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(execgo)
                                .add(52, 52, 52)
                                .add(jButton1)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(33, 33, 33)
                .add(jComboBox_usedb, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(43, 43, 43)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 336, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(28, 28, 28)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(execgo)
                    .add(jButton1)
                    .add(jCheckBox_sql_js))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButtonClean)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

private void execgoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_execgoActionPerformed

    if(this.jCheckBox_sql_js.isSelected())
    {    
        runsql();
    }else
    {
      runjs();
    }
}//GEN-LAST:event_execgoActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
dispose();
}//GEN-LAST:event_jButton1ActionPerformed

private void jCheckBox_sql_jsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox_sql_jsStateChanged
 if(this.jCheckBox_sql_js.isSelected())
 {
   this.jComboBox_usedb.setVisible(true);
   this.jComboBox_usedb.setEnabled(true);
 }
 else
 {
     this.jComboBox_usedb.setVisible(false);
     this.jComboBox_usedb.setEnabled(false);
 }
}//GEN-LAST:event_jCheckBox_sql_jsStateChanged

private void jButtonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCleanActionPerformed
this.jTextArea1.setText("");
}//GEN-LAST:event_jButtonCleanActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton execgo;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClean;
    private javax.swing.JCheckBox jCheckBox_sql_js;
    private javax.swing.JComboBox jComboBox_usedb;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    private void runjs() {
        ScriptEngineManager manager = new ScriptEngineManager();
    ScriptEngine engine = manager.getEngineByName("javascript");
    try {
       // int lc=this.jTextArea1.getLineCount();
        //for(int i=0;i<lc;i++)
       // {
        // engine.put("name", "abcde");
       // }
      //engine.eval("var output = '';for (i = 0; i <= name.length; i++) {"
        //  + "  output = name.charAt(i)+'-' + output" + "}");
      //String name = (String) engine.get("output");
      //System.out.println(name);
        engine.eval(this.jTextArea1.getText());
        this.jTextArea1.append( engine.get("ret").toString());
        
    } catch (ScriptException e) 
    {
      System.err.println(e);
    }
    }
    // End of variables declaration

    private void runsql() {
        Connection con=null;
        if(this.jComboBox_usedb.getSelectedItem().toString().equalsIgnoreCase("users"))
        {
        con = BursaAnalizer_Frame.getConnectToDB(
                                 BursaAnalizer_Frame.DBID_USER).con;
        }else if(this.jComboBox_usedb.getSelectedItem().toString().equalsIgnoreCase("system"))
        {
        con = BursaAnalizer_Frame.getConnectToDB(
                                 BursaAnalizer_Frame.DBID_BASE).con;
        }else if(this.jComboBox_usedb.getSelectedItem().toString().equalsIgnoreCase("data"))
        {
        con = BursaAnalizer_Frame.getConnectToDB(
                                 BursaAnalizer_Frame.DBID_DATA).con;
        }

        TRS  RS = new TRS(con);

        try {
            String sqls=this.jTextArea1.getSelectedText();
            RS.execSQL(sqls);
            
            int colc=RS.rs.getMetaData().getColumnCount();
             this.jTextArea1.append("\n");
            while (RS.rs.next()) {
                 for(int i=1;i<=colc;i++)
                 {
                //t.o[0] = new Integer (RS.rs.getInt("ID"));
                //t.o[1] = RS.rs.getString("COMPANY");
                this.jTextArea1.append( RS.rs.getString(i));
                this.jTextArea1.append("    ");
                 }
                 this.jTextArea1.append("\n");
            }
        }  catch (SQLException e) {
            if (LoggerNB.debuging){                System.out.println("Error20: " + e);}
        }  finally {
            RS.close();
            RS = null;}
    }
    
}
